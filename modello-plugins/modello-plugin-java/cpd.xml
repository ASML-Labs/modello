<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="30" tokens="216">
<file line="946" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\JavaModelloGenerator.java"/>
<file line="993" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\JavaModelloGenerator.java"/>
<codefragment>
<![CDATA[
        sc = jMethod.getSourceCode();
        sc.add( "if ( source == null )" );
        sc.add( "{" );
        sc.addIndented( "return target;" );
        sc.add( "}" );
        sc.add( "else if ( target == null )" );
        sc.add( "{" );
        sc.addIndented( "return source;" );
        sc.add( "}" );
        sc.add( "" );
        sc.add( locationClass.getName() + " result =" );
        sc.add( "    new " + locationClass.getName() + "( target.getLineNumber(), target.getColumnNumber()" + (
            sourceClass != null
                ? ", target.get" + capitalise( source.getName() ) + "()"
                : "" ) + " );" );
        sc.add( "" );
        sc.add( fieldType + " locations;" );
        sc.add( fieldType + " sourceLocations = source.get" + capitalise( locationsField ) + "();" );
        sc.add( fieldType + " targetLocations = target.get" + capitalise( locationsField ) + "();" );
        sc.add( "if ( sourceLocations == null )" );
        sc.add( "{" );
        sc.addIndented( "locations = targetLocations;" );
        sc.add( "}" );
        sc.add( "else if ( targetLocations == null )" );
        sc.add( "{" );
        sc.addIndented( "locations = sourceLocations;" );
        sc.add( "}" );
        sc.add( "else" );
        sc.add( "{" );
        sc.addIndented( "locations = new " + fieldImpl + "();" );
]]>
</codefragment>
</duplication>
<duplication lines="25" tokens="135">
<file line="1426" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\JavaModelloGenerator.java"/>
<file line="2154" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\JavaModelloGenerator.java"/>
<codefragment>
<![CDATA[
        JavaAssociationMetadata javaAssociationMetadata = getJavaAssociationMetadata( modelAssociation );

        if ( modelAssociation.isManyMultiplicity() )
        {
            JType componentType = getComponentType( modelAssociation, javaAssociationMetadata );

            String defaultValue = getDefaultValue( modelAssociation, componentType );

            JType type;
            if ( modelAssociation.isGenericType() )
            {
                type = new JCollectionType( modelAssociation.getType(), componentType, useJava5 );
            }
            else if ( ModelDefault.MAP.equals( modelAssociation.getType() ) )
            {
                JMapType mapType = new JMapType( modelAssociation.getType(), defaultValue, componentType, useJava5 );
                defaultValue = mapType.getInstanceName();
                type = mapType;
            }
            else
            {
                type = new JClass( modelAssociation.getType() );
            }

            JField jField = new JField( type, modelAssociation.getName() );
]]>
</codefragment>
</duplication>
<duplication lines="27" tokens="123">
<file line="688" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\javasource\JClass.java"/>
<file line="455" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\javasource\JInterface.java"/>
<codefragment>
<![CDATA[
            if ( fieldAnnotations != null ) fieldAnnotations.print( jsw );

            // -- print member
            jsw.write( jField.getModifiers().toString() );
            jsw.write( ' ' );

            JType type = jField.getType();
            String typeName = type.toString();
            //-- for esthetics use short name in some cases
            if ( typeName.equals( toString() ) )
            {
                typeName = type.getLocalName();
            }
            jsw.write( typeName );
            jsw.write( ' ' );
            jsw.write( jField.getName() );

            String init = jField.getInitString();
            if ( init != null )
            {
                jsw.write( " = " );
                jsw.write( init );
            }

            jsw.writeln( ';' );
            jsw.writeln();
        }
]]>
</codefragment>
</duplication>
<duplication lines="30" tokens="108">
<file line="288" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\javasource\JCompUnit.java"/>
<file line="378" path="F:\tmp\modello\modello-plugins\modello-plugin-java\src\main\java\org\codehaus\modello\plugin\java\javasource\JStructure.java"/>
<codefragment>
<![CDATA[
        String javaPackagePath = "";
        if ( ( packageName != null ) && ( packageName.length() > 0 ) )
        {
            javaPackagePath = packageName.replace( '.', File.separatorChar );
        }

        //-- Create fully qualified path (including 'destDir') to file
        File pathFile;
        if ( destDir == null )
            pathFile = new File( javaPackagePath );
        else
            pathFile = new File( destDir, javaPackagePath );
        if ( !pathFile.exists() )
        {
            pathFile.mkdirs();
        }

        //-- Prefix filename with path
        if ( pathFile.toString().length() > 0 )
            filename = pathFile.toString() + File.separator + filename;

        return filename;
    } //-- getFilename

    /**
     * Returns the name of the package that this JCompUnit is a member of
     * @return the name of the package that this JCompUnit is a member of,
     * or null if there is no current package name defined
     **/
    public String getPackageName()
]]>
</codefragment>
</duplication>
</pmd-cpd>